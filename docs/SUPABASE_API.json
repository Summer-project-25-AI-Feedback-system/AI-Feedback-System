{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "vzx4zrjmau6fi"
  },
  "info": {
    "title": "AI-Feedback-API-Documentation",
    "version": "1.0",
    "summary": "API documentation for an AI feedback system",
    "description": "The API documentation for the following AI feedback system's database: https://github.com/Summer-project-25-AI-Feedback-system/AI-Feedback-System"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/{org}/roster": {
      "get": {
        "summary": "Get roster",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
                "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/Roster"
                    }
                }     
            }
          },
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                                "type": "string",
                                "example": "Unexpected server error while retrieving roster"
                            }
                        }
                    }
                }
            }
          }
        },
        "operationId": "get-roster",
        "x-stoplight": {
          "id": "udw6149vm705u"
        },
        "description": "Get the student roster for a specific organization."
      },
      "post": {
        "summary": "Add roster",
        "tags": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/Roster"
                }
            }  
          }
        },
        "responses": {
          "201": {
            "description": "Roster created"
          },
          "400": {
            "description": "Invalid roster data"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                                "type": "string",
                                "example": "Failed to add roster"
                            }
                        }
                    }
                }
            }
          }
        },
        "operationId": "create-roster",
        "description": "Add a new student roster to the organization. Overwrites existing roster if it already exists."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "org",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{org}/feedback": {
      "get": {
        "summary": "Get feedback",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssignmentFeedback"
                        }
                    }
                }     
            }
          },
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                                "type": "string",
                                "example": "Unexpected server error while retrieving assignment feedback"
                            }
                        }
                    }
                }
            }
          }
        },
        "operationId": "get-feedback",
        "x-stoplight": {
          "id": "a57z6hhfhmg5i"
        },
        "description": "Get feedback for all assignments in a specific organization. Optionally filter by assignment ID and/or student roster identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "github_assignment_id",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "github_roster_identifier",
            "in": "query",
            "required": false
          }
        ]
      },
      "post": {
        "summary": "Add feedback",
        "tags": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
                "schema": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/AssignmentFeedback" },
                      {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AssignmentFeedback" }
                      }
                    ]
                }
            }  
          }
        },
        "responses": {
          "200": {
            "description": "Feedback(s) created or updated"
          },
          "400": {
            "description": "Invalid request body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                                "type": "string",
                                "example": "Failed to store feedback"
                            }
                        }
                    }
                }
            }
          }
        },
        "operationId": "add-feedback",
        "description": "Post feedback(s) for an assignment's submission. If feedback already exists, it will be overwritten."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "org",
          "in": "path",
          "required": true
        }
      ]
    },
    "/{org}/assignments": {
      "get": {
        "summary": "Get assignment(s)",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Assignment"
                        }
                    }
                }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                                "type": "string",
                                "example": "Unexpected server error while retrieving assignment(s)"
                            }
                        }
                    }
                }
            }
          }
        },
        "operationId": "get-assignments",
        "x-stoplight": {
          "id": "pz8azs2zg9nr0"
        },
        "description": "Get assignments and their information related to a specific organization. Optionally filter by assignment ID.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "github_assignment_id",
            "in": "query",
            "required": false
          }
        ]
      },
      "post": {
        "summary": "Add assignment(s)",
        "tags": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/Assignment" },
                  {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Assignment" }
                  }
                ]   
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assignment(s) created or updated"
          },
          "400": {
            "description": "Invalid request body"
          },
          "500": {
            "description": "Internal server error",
             "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to store assignment(s)"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "add-assignments",
        "x-stoplight": {
          "id": "pz8azs2zg9nr0"
        },
        "description": "Post one or many assignments for a specific organization. Existing assignments with the same ID will be overwritten."
      }
    },
    "parameters": [
      {
        "schema": {
          "type": "string"
        },
        "name": "org",
        "in": "path",
        "required": true
      }
    ]
  },
  "components": {
    "schemas": {
      "Organization": {
        "title": "Organization",
        "type": "object",
        "description": "A GitHub organization using the AI Feedback System.",
        "required": [
          "github_org_id" 
        ],
        "properties": {
          "github_org_id": {
            "type": "string",
            "description": "GitHub Organization ID (used as the primary key)."
          },
          "name": {
            "type": "string",
            "description": "GitHub Organization name."
          },
          "assignments": {
            "type": "array",
            "description": "An array of assignments belonging to this GitHub organization.",
            "items": {
                "$ref": "#/components/schemas/Assignment"
            }
          }
        }
      },
      "Assignment": {
        "title": "Assignment",
        "x-stoplight": {
          "id": "uc7qj0f1at5y9"
        },
        "type": "object",
        "description": "A singular assignment belonging to an organization.",
        "required": [
          "github_assignment_id",
          "github_org_id",
          "name",
          "deadline",
          "maxPoints"
        ],
        "properties": {
          "github_assignment_id": {
            "type": "string",
            "x-stoplight": {
              "id": "q7p7hsc8ki0wn"
            },
            "description": "The unique identifier of the assignment."
          },
          "github_org_id": {
            "type": "string",
            "description": "GitHub Organization ID this assignment belongs to."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "8qlicjlkat1gj"
            },
            "description": "What the assignment is called."
          },
          "deadline": {
            "type": "string",
            "x-stoplight": {
              "id": "916a2vggn0npv"
            },
            "description": "When the assignment has to be submitted for approved points."
          },
          "maxPoints": {
            "type": "string",
            "x-stoplight": {
              "id": "bv1v19817cajp"
            },
            "description": "Maximum amount of points a student can get from the assignment."
          },
          "totalStudents": {
            "type": "string",
            "x-stoplight": {
              "id": "q292odyaacq6p"
            },
            "description": "Amount of students in a student roster that has been provided by the user."
          },
          "submissions": {
            "type": "string",
            "x-stoplight": {
              "id": "wh1t4zoa799ij"
            },
            "description": "Amount of submissions of this assignment made by students in GitHub classroom."
          },
          "acceptedAssignments": {
            "type": "string",
            "x-stoplight": {
              "id": "bb9vndxwovdqh"
            },
            "description": "Amount of students who have accepted this assignment in GitHub classroom."
          }
        }
      },
      "Roster": {
        "title": "Roster",
        "x-stoplight": {
          "id": "bg7gayx6mzo1b"
        },
        "type": "object",
        "description": "A singular roster uploaded by a user.",
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "42vsbefkw4ua9"
            },
            "description": "The supabase roster ID."
          },
          "github_org_id": {
            "type": "string",
            "x-stoplight": {
              "id": "2tmf3jh0ao5nn"
            },
            "description": "GitHub organization ID."
          },
          "students": {
            "type": "array",
            "x-stoplight": {
              "id": "y5f6hsls7dfzl"
            },
            "description": "Array of students in the roster.",
            "items": {
                "$ref": "#/components/schemas/RosterStudent"
            }
          },
          "amount_of_students": {
            "type": "integer",
            "x-stoplight": {
              "id": "aj35pfp7guewn"
            },
            "description": "Total number of students in the roster."
          }
        }
      },
      "RosterStudent": {
        "title": "RosterStudent",
        "x-stoplight": {
          "id": "1guvucj9s5dqb"
        },
        "type": "object",
        "description": "A student in the uploaded roster.",
        "required": [
          "id",
          "github_roster_identifier"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "b1wrxbhtxvivx"
            },
            "description": "The supabase student ID."
          },
          "github_roster_identifier": {
            "type": "string",
            "x-stoplight": {
              "id": "3m0i7dvfia5s2"
            },
            "description": "The \"identifier\" column in an uploadable student roster in GitHub classroom."
          },
          "github_username": {
            "type": "string",
            "x-stoplight": {
              "id": "ev2pnmsv0d92y"
            },
            "description": "A student's GitHub username provided in an uploadable student roster from GitHub classroom."
          },
          "github_user_id": {
            "type": "string",
            "x-stoplight": {
              "id": "nu5y9y074dqmv"
            },
            "description": "A student's GitHub ID provided in an uploadable student roster from GitHub classroom."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "7kir58sivefu0"
            },
            "description": "A student's display name in GitHub provided in an uploadable student roster from GitHub classroom."
          }
        }
      },
      "AssignmentFeedback": {
        "title": "AssignmentFeedback",
        "x-stoplight": {
          "id": "52d2bc6vuso3z"
        },
        "type": "object",
        "required": [
          "id",
          "github_assignment_id",
          "github_org_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "dospv2g8j5fqq"
            },
            "description": "Unique identifier for this feedback."
          },
          "github_assignment_id": {
            "type": "string",
            "x-stoplight": {
              "id": "17sbvpd2xluo3"
            },
            "description": "GitHub assignment ID this feedback belongs to."
          },
          "github_org_id": {
            "type": "string",
            "description": "GitHub organization ID this feedback belongs to."
          },
          "github_roster_identifier": {
            "type": "string",
            "x-stoplight": {
              "id": "jvgchyrt817gv"
            },
            "description": "GitHub roster ID column from the submitted roster. The student this feedback belongs to."
          },
          "feedback_text": {
            "type": "string",
            "x-stoplight": {
              "id": "cbfe64pstt7q2"
            },
            "description": "Feedback paragraph on assignment submission given by AI."
          },
          "feedback_score": {
            "type": "integer",
            "x-stoplight": {
              "id": "3vw0c2iw24t91"
            },
            "description": "Score on assignment submission given by AI."
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "87rpnkhbrak4p"
            },
            "description": "Time of when feedback was given."
          }
        },
        "description": "Feedback by AI for a student's submission to an assignment."
      }
    }
  }
}
openapi: 3.0.0
info:
  title: AI Feedback System API
  version: 1.0.0
  description: API documentation for the AFS backend

servers:
  - url: https://ai-feedback.live
    description: Production server (HTTPS only)
  - url: https://localhost:5000
    description: Local development server (HTTPS required)

security:
  - cookieAuth: []

paths:
  /api/message:
    get:
      summary: Test backend message
      security: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                additionalProperties: false

  /api/auth/login:
    get:
      summary: Start GitHub OAuth login
      description: |
        Redirects to GitHub OAuth login page.
        After successful authentication, user will be redirected to
        /api/auth/callback endpoint.
      security: []
      responses:
        "302":
          description: Redirect to GitHub OAuth
          headers:
            Location:
              description: GitHub authorization URL
              schema:
                type: string
        "500":
          description: Authentication setup failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to initialize authentication

  /api/auth/callback:
    get:
      summary: GitHub OAuth callback
      description: |
        Receives the callback from GitHub after authentication:
        1. Validates GitHub authentication
        2. Upserts user data to database
        3. Redirects to /orgs on success
      security: []
      responses:
        "302":
          description: Redirect to frontend's /orgs page
          headers:
            Location:
              description: Frontend URL after login (redirects to /orgs)
              schema:
                type: string
        "500":
          description: Failed to save user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User save failed

  /api/auth/current:
    get:
      summary: Get current authenticated user
      responses:
        "200":
          description: Returns user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized or not logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not authenticated

  /api/auth/logout:
    get:
      summary: Logout current user
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
        "401":
          description: Unauthorized
        "500":
          description: Logout failed

  /api/github/orgs:
    get:
      summary: List accessible GitHub organizations
      description: Returns a list of GitHub organizations the authenticated user has access to.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgInfo"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string

  /api/github/orgs/{orgName}/assignments:
    get:
      summary: List assignments in an organization
      parameters:
        - in: path
          name: orgName
          required: true
          schema:
            type: string
          description: GitHub organization name
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssignmentInfo"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: array
                    items:
                      type: string
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/github/orgs/{orgName}/assignmentsDetails:
    get:
      summary: Get detailed assignments information
      parameters:
        - in: path
          name: orgName
          required: true
          schema:
            type: string
          description: GitHub organization name
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssignmentClassroomInfo"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/github/orgs/{orgName}/assignments/{assignmentName}/repos:
    get:
      summary: Get student repositories for an assignment
      parameters:
        - in: path
          name: orgName
          required: true
          schema:
            type: string
          description: GitHub organization name
        - in: path
          name: assignmentName
          required: true
          schema:
            type: string
          description: Assignment name prefix
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepoInfo"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/github/repos/{orgName}/{repoName}/commits:
    get:
      summary: Get commit history for a repository
      parameters:
        - in: path
          name: orgName
          required: true
          schema:
            type: string
          description: GitHub organization name
        - in: path
          name: repoName
          required: true
          schema:
            type: string
          description: Repository name
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommitInfo"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/github/repos/{orgName}/{repoName}/tree:
    get:
      summary: Get repository file tree structure
      parameters:
        - in: path
          name: orgName
          required: true
          schema:
            type: string
          description: GitHub organization name
        - in: path
          name: repoName
          required: true
          schema:
            type: string
          description: Repository name
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/github/repos/{orgName}/{repoName}/contents:
    get:
      summary: Get file contents
      parameters:
        - in: path
          name: orgName
          required: true
          schema:
            type: string
          description: GitHub organization name
        - in: path
          name: repoName
          required: true
          schema:
            type: string
          description: Repository name
        - in: query
          name: path
          required: true
          schema:
            type: string
          description: File path in repository
      responses:
        "200":
          description: File contents
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: File Not Found
        "500":
          description: Internal Server Error

  /api/github/repos/{orgName}/{repoName}/compare/{base}/{head}:
    get:
      summary: Compare two commits
      parameters:
        - in: path
          name: orgName
          required: true
          schema:
            type: string
          description: GitHub organization name
        - in: path
          name: repoName
          required: true
          schema:
            type: string
          description: Repository name
        - in: path
          name: base
          required: true
          schema:
            type: string
          description: Base commit SHA
        - in: path
          name: head
          required: true
          schema:
            type: string
          description: Head commit SHA
      responses:
        "200":
          description: Comparison result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompareCommitsInfo"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/github/org-report:
    get:
      summary: Get comprehensive organization report
      parameters:
        - in: query
          name: org
          required: true
          schema:
            type: string
          description: GitHub organization name
      responses:
        "200":
          description: Organization report
          content:
            application/json:
              schema:
                type: object
                properties:
                  org:
                    type: string
                  orgId:
                    type: integer
                  assignments:
                    type: array
                    items:
                      type: string
                  submissions:
                    type: array
                    items:
                      type: object
                      properties:
                        student:
                          type: string
                        grades:
                          type: object
                          additionalProperties:
                            type: any
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/evaluation/run-repomix:
    post:
      summary: Generate XML representation of a GitHub repository
      operationId: runRepomix
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repoUrl:
                  type: string
                  format: uri
                  example: "https://github.com/user/repo"
                  description: URL of the GitHub repository to analyze
              required:
                - repoUrl
      responses:
        "200":
          description: Successful XML generation
          content:
            application/json:
              schema:
                type: object
                properties:
                  xml:
                    type: string
                    description: Base64-encoded XML representation
                    example: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4K..."
        "400":
          description: Missing required parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing repoUrl"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to run repomix"
                  details:
                    type: string
                    example: "Error connecting to GitHub"

  /api/evaluation/run-aievolution:
    post:
      summary: Generate evaluation report from XML
      operationId: runAIEvolution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                xml:
                  type: string
                  description: Base64-encoded XML from run-repomix
                  example: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4K..."
                organizationId:
                  type: string
                  example: "org-12345"
                  description: Organization identifier
                repoName:
                  type: string
                  example: "my-project"
                  description: Repository name
                assignmentName:
                  type: string
                  example: "JavaScript Basics"
                  description: Assignment name
              required:
                - xml
                - organizationId
                - repoName
                - assignmentName
      responses:
        "200":
          description: Successful evaluation
          content:
            application/json:
              schema:
                type: object
                properties:
                  markdownContent:
                    type: string
                    description: Markdown formatted evaluation report
                    example: |
                      # Assignment Evaluation
                      ## Summary
                      Good implementation with minor issues...
                      Total Score: 4.2/5
        "400":
          description: Missing required parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required fields"
        "500":
          description: Evaluation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to run AIEvolution"
                  details:
                    type: string
                    example: "OpenAI API timeout"

  # =====================
  # SUPABASE ROUTES START
  # =====================
  /api/supabase/organizations:
    post:
      summary: Create or update organizations
      description: |
        Creates or updates organizations in the database.
        Requires authenticated user with GitHub ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationInput"
      responses:
        "200":
          description: Organizations created/updated successfully
        "401":
          description: Unauthorized or missing GitHub ID
        "500":
          description: Internal Server Error

  /api/supabase/{org}/assignments:
    get:
      summary: Get assignments for an organization
      description: |
        Retrieves assignments for a specific organization.
        Supports filtering by GitHub assignment ID.
      parameters:
        - in: path
          name: org
          required: true
          schema:
            type: string
          description: GitHub organization ID
        - in: query
          name: github_assignment_id
          schema:
            type: string
          description: Optional GitHub assignment ID for filtering
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Assignment"
        "401":
          description: Unauthorized
        "404":
          description: Assignment not found
        "500":
          description: Internal Server Error

    post:
      summary: Create or update assignments
      description: |
        Creates or updates assignments for an organization.
        Automatically removes assignments that no longer exist in GitHub.
      parameters:
        - in: path
          name: org
          required: true
          schema:
            type: string
          description: GitHub organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/AssignmentInput"
                - type: array
                  items:
                    $ref: "#/components/schemas/AssignmentInput"
      responses:
        "200":
          description: Assignments created/updated successfully
        "401":
          description: Unauthorized
        "404":
          description: Organization not found
        "500":
          description: Internal Server Error

  /api/supabase/{org}/roster:
    get:
      summary: Get organization roster
      description: Retrieves the roster including students for an organization
      parameters:
        - in: path
          name: org
          required: true
          schema:
            type: string
          description: GitHub organization ID
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RosterWithStudents"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

    post:
      summary: Create or update roster
      description: |
        Creates or updates a roster including students for an organization.
        Replaces existing roster data.
      parameters:
        - in: path
          name: org
          required: true
          schema:
            type: string
          description: GitHub organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RosterWithStudentsInput"
      responses:
        "201":
          description: Roster created successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/supabase/{org}/evaluations:
    get:
      summary: Get AI evaluations
      description: |
        Retrieves AI evaluations for an organization.
        Supports filtering by GitHub assignment ID and roster student ID.
      parameters:
        - in: path
          name: org
          required: true
          schema:
            type: string
          description: GitHub organization ID
        - in: query
          name: github_assignment_id
          schema:
            type: string
          description: GitHub assignment ID for filtering
        - in: query
          name: roster_student_id
          schema:
            type: string
          description: Roster student ID for filtering
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AiEvaluation"
        "204":
          description: No evaluations found
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

    post:
      summary: Create or update evaluations
      description: Creates or updates AI evaluations for an organization
      parameters:
        - in: path
          name: org
          required: true
          schema:
            type: string
          description: GitHub organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/AiEvaluationInput"
                - type: array
                  items:
                    $ref: "#/components/schemas/AiEvaluationInput"
      responses:
        "200":
          description: Evaluations created/updated successfully
        "401":
          description: Unauthorized
        "404":
          description: Assignment not found
        "500":
          description: Internal Server Error

  # ===================
  # SUPABASE ROUTES END
  # ===================

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: afs_session
      description: Session cookie for authenticated users. Set after successful GitHub OAuth login.

  schemas:
    User:
      example:
        id: "123456"
        username: "octocat"
        email: "octocat@github.com"
        profileUrl: "https://github.com/octocat"
      type: object
      properties:
        id:
          type: string
          description: GitHub user ID
        username:
          type: string
          description: GitHub username
        email:
          type: string
          description: User's primary email
        profileUrl:
          type: string
          description: URL to GitHub profile

    OrgInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        avatarUrl:
          type: string

    AssignmentInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        amountOfStudents:
          type: integer
        updatedAt:
          type: string

    AssignmentClassroomInfo:
      example:
        id: 12345
        name: "assignment-1"
        accepted: 25
        submitted: 30
        passing: 20
        deadline: "2023-12-31T23:59:59Z"
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        accepted:
          type: integer
        submitted:
          type: integer
        passing:
          type: integer
        deadline:
          type: string
          format: date-time

    RepoInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        avatarUrl:
          type: string
        url:
          type: string
        description:
          type: string
        defaultBranch:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        lastPush:
          type: string
        lastCommitMessage:
          type: string
        lastCommitDate:
          type: string
        collaborators:
          type: array
          items:
            $ref: "#/components/schemas/Collaborator"

    Collaborator:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        avatarUrl:
          type: string
        htmlUrl:
          type: string
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean

    CommitInfo:
      type: object
      properties:
        sha:
          type: string
        html_url:
          type: string
        commit:
          type: object
          properties:
            message:
              type: string
            author:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                date:
                  type: string
        author:
          type: object
          properties:
            login:
              type: string
            avatar_url:
              type: string
            html_url:
              type: string

    CompareCommitsInfo:
      type: object
      properties:
        status:
          type: string
        ahead_by:
          type: integer
        behind_by:
          type: integer
        total_commits:
          type: integer
        commits:
          type: array
          items:
            $ref: "#/components/schemas/CommitInfo"
        files:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
              status:
                type: string
              additions:
                type: integer
              deletions:
                type: integer
              changes:
                type: integer

    # Supabase-specific schemas
    OrganizationInput:
      type: object
      properties:
        name:
          type: string
        external_github_org_id:
          type: integer

    Assignment:
      type: object
      properties:
        id:
          type: string
        external_github_assignment_id:
          type: integer
        organization_id:
          type: string
        name:
          type: string
        max_points:
          type: number
        submitted:
          type: number
          description: Number of students who submitted this assignment

    AssignmentInput:
      type: object
      properties:
        external_github_assignment_id:
          type: integer
        name:
          type: string
        max_points:
          type: number
        submitted:
          type: number

    RosterWithStudents:
      type: object
      properties:
        id:
          type: string
        organization_id:
          type: string
        amount_of_students:
          type: integer
        roster_students:
          type: array
          items:
            $ref: "#/components/schemas/RosterStudent"

    RosterWithStudentsInput:
      type: object
      properties:
        amount_of_students:
          type: integer
        roster_students:
          type: array
          items:
            $ref: "#/components/schemas/RosterStudentInput"

    RosterStudent:
      type: object
      properties:
        id:
          type: string
        roster_id:
          type: string
        github_roster_identifier:
          type: string
        github_username:
          type: string
          nullable: true
        github_user_id:
          type: string
          nullable: true
        github_display_name:
          type: string
          nullable: true

    RosterStudentInput:
      type: object
      properties:
        github_roster_identifier:
          type: string
        github_username:
          type: string
          nullable: true
        github_user_id:
          type: string
          nullable: true
        github_display_name:
          type: string
          nullable: true

    AiEvaluation:
      type: object
      properties:
        id:
          type: string
        roster_student_id:
          type: string
        assignment_id:
          type: string
        organization_id:
          type: string
        created_at:
          type: string
          format: date-time
        ai_model:
          type: string
        md_file:
          type: string

    AiEvaluationInput:
      type: object
      properties:
        roster_student_id:
          type: string
        assignment_id:
          type: string
        organization_id:
          type: string
        created_at:
          type: string
          format: date-time
        ai_model:
          type: string
        md_file:
          type: string
